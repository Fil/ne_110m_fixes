#!/bin/bash

rm -rvf world

install() {
  npm install -g d3-dsv d3-geo-projection ndjson-cli shapefile topojson@3
}

world_shp() {
  mkdir -p build
  curl -z build/ne_$1_admin_0_countries.zip -o build/ne_$1_admin_0_countries.zip http://naciscdn.org/naturalearth/$1/cultural/ne_$1_admin_0_countries.zip
  unzip -od build build/ne_$1_admin_0_countries.zip
  chmod a-x build/ne_$1_admin_0_countries.*
}

worldfix() {
  world_shp $1
  mkdir -p world
  shp2json --encoding utf-8 -n build/ne_$1_admin_0_countries.shp \
    | ndjson-map 'i = d.properties.ISO_N3, d.id = i === "-99" ? undefined : i, d' \
    | ndjson-map 'JSON.parse(JSON.stringify(d)
      // "fix Surinam / Fr. Guyane"
      //.replace(/\[-54.524\d+,2.311\d+\],\[-54.271\d+,2.738\d+\],\[-54.184\d+,3.194\d+\],\[-54.011\d+,3.622\d+\],\[-54.399\d+,4.212\d+\]/,"[-54.524754197799716,2.3118488631237852],[-54.2697051662232,2.7323916691150463],[-54.181726040246275,3.1897797713304215],[-54.00693050801901,3.6200377465925584],[-54.399542202356514,4.212611395683467]")
      // "fix Sudanâ€™s partition tripoints"
      //.replace(/\[33.9609\d+,9.58384\d+\]/g,"[33.9609,9.58384]")
      //.replace(/\[33\.97\d+,8\.68\d+\],\[33\.96\d+,9\.58\d+\],/g,"")
      //.replace(/(\[23\.80\d+,8\.66\d+\]),(\[24\.567\d+,8\.229\d+\])/,"$1,[23.88698,8.61973],$2")
      // "fix Tanzania / DRC"
      //.replace(/\[29.620\d+,-6.520\d+]/,"[29.62,-6.52]")
      // "anchor points for Puntland, in Ethiopia and Somalia"
      //.replace(/(\[46\.9\d+,7\.9\d+\],\[47\.7\d+,8\.0\d+\])/,"$1,[47.4, 7.6]")
      //.replace(/(\[44\.9\d+,5\.\d+\]),(\[47\.7\d+,8\.0\d+\])/,"$1,[47.4, 7.6],$2")
      //.replace(/(\[50\.07\d+,8\.08\d+\])/,"$1,[49.81, 7.6]")
      // "fix Egypt/Gaza"
      .replace(/(\[33\.77\d+,30\.96\d+\])/g,"$1,[34.20,31.28]")
      .replace(/\[34\.55\d+,31\.5\d+\]/g,"[34.65,31.40]")
      .replace(/\[34\.26\d+,31\.2[12]\d+\]/g,"[34.34,31.03]")
      )' \
    | ndjson-map 'd.properties.fill = ["#ff0000","#ff4d00","#ff9900","#ffe600","#ccff00","#80ff00","#33ff00","#00ff19","#00ff66","#00ffb3","#00ffff","#00b2ff","#0066ff","#001aff","#3300ff","#8000ff","#cc00ff","#ff00e6","#ff0099","#ff004d"][Math.random()*20|0],d' \
    | ndjson-map '
        // "fix Sudan+CAF and Sudan+Ethiopia tripoints"
        [d].forEach(d => {
          if (d.properties.ADM0_A3 === "SDN") {
            d.geometry.coordinates[0] = d.geometry.coordinates[0].slice(1,-1), d.geometry.coordinates[0].push(d.geometry.coordinates[0][0])
            var remove = [33.974991441972506,8.684470097592124];
            var c = [];
            d.geometry.coordinates[0].forEach(p => {
              if (Math.abs(p[0]-remove[0]) < 0.001 && Math.abs(p[1]-remove[1]) < 0.001) {} else c.push(p);
            });
            d.geometry.coordinates[0] = c;
          }
          if (d.properties.ADM0_A3 === "CAF") {
            var after = [23.805902839530372,8.666316144553868], add = [23.88689558061177,8.61974730849921];
            var c = [];
            d.geometry.coordinates[0].forEach(p => {
              c.push(p);
              if (Math.abs(p[0]-after[0]) < 0.001 && Math.abs(p[1]-after[1]) < 0.001) c.push(add);
            });
            d.geometry.coordinates[0] = c;
          }
          if (d.properties.ADM0_A3 === "ETH") {
            var after = [33.974991441972506,8.684470097592124], add = [33.96332582082909,9.464300775931127];
            var c = [];
            d.geometry.coordinates[0].forEach(p => {
              c.push(p);
              if (Math.abs(p[0]-after[0]) < 0.001 && Math.abs(p[1]-after[1]) < 0.001) c.push(add);
            });
            d.geometry.coordinates[0] = c;
          }
        }), d' \
    | ndjson-map '
      // "add Gaza to PSX"
      ((d.properties.ADM0_A3 !== "PSX") ? null : (d.geometry.type = "MultiPolygon", d.geometry.coordinates = [d.geometry.coordinates, /* Gaza */ [[[34.20,31.28],  [34.48810713068136,31.60553884533732], [34.65,31.40], [34.34,31.03], [34.20,31.28]]] ]), d)' \
    | ndjson-map '
      // "use the UN delimited border between MAR and SAH"
      ((d.properties.ISO_A3 !== "MAR") ? null : (d.geometry = { "type": "Polygon", "coordinates": [ [ [ -5.193863491222032, 35.755182196590852 ], [ -4.591006232105144, 35.330711981745651 ], [ -3.640056525070008, 35.399855048151977 ], [ -2.604305792644112, 35.179093329401127 ], [ -2.169913702798624, 35.168396307916709 ], [ -1.792985805661658, 34.527918606091305 ], [ -1.73345455566141, 33.919712836232122 ], [ -1.388049282222596, 32.864015000941379 ], [ -1.124551153966195, 32.651521511357203 ], [ -1.30789913573787, 32.262888902306031 ], [ -2.616604783529567, 32.094346218386164 ], [ -3.068980271812649, 31.724497992473289 ], [ -3.647497931320146, 31.637294012980817 ], [ -3.690441046554668, 30.896951605751156 ], [ -4.859646165374443, 30.501187649043885 ], [ -5.242129278982787, 30.000443020135577 ], [ -6.060632290053746, 29.731699734001808 ], [ -7.059227667661901, 29.579228420524657 ], [ -8.674116176782832, 28.84128896739665 ], [ -8.665589565454837, 27.65642588959247 ], [ -8.817809007940525, 27.65642588959247 ], [ -8.817828334986643, 27.65642588959247 ], [ -8.81782833498664, 27.656425889592398 ], [ -13.118630760498657, 27.656425889592398 ], [ -12.618836635783111, 28.038185533148663 ], [ -11.688919236690765, 28.148643907172584 ], [ -10.900956997104402, 28.83214223888092 ], [ -10.399592251008642, 29.09858592377779 ], [ -9.564811163765626, 29.933573716749862 ], [ -9.814718390329176, 31.17773550060906 ], [ -9.434793260119363, 32.038096421836485 ], [ -9.300692918321829, 32.564679266890636 ], [ -8.65747636558504, 33.240245266242397 ], [ -7.654178432638219, 33.697064927702513 ], [ -6.91254411460136, 34.110476386037448 ], [ -6.244342006851411, 35.145865383437524 ], [ -5.929994269219833, 35.75998810479399 ], [ -5.193863491222032, 35.755182196590852 ] ] ] }), d)' \
    | ndjson-map '
      ((d.properties.ADM0_A3 !== "SAH") ? null : (d.geometry = { "type": "Polygon", "coordinates": [ [ [ -17.020428432675743, 21.422310288981478 ], [ -17.020428432675772, 21.422310288981635 ], [ -16.58913692876763, 22.158234361250095 ], [ -16.261921759495664, 22.679339504481277 ], [ -16.326413946995899, 23.017768459560898 ], [ -15.982610642958065, 23.723358466074103 ], [ -15.426003790742186, 24.359133612561038 ], [ -15.089331834360735, 24.520260728446971 ], [ -14.824645148161693, 25.103532619725314 ], [ -14.800925665739669, 25.636264960222292 ], [ -14.439939947964831, 26.254418443297652 ], [ -13.773804897506466, 26.618892320252286 ], [ -13.139941779014293, 27.640147813420498 ], [ -13.121613369914712, 27.654147671719812 ], [ -13.118630760498657, 27.656425889592398 ], [ -8.81782833498664, 27.656425889592398 ], [ -8.817828334986638, 27.656425889592356 ], [ -8.665589565454809, 27.656425889592356 ], [ -8.665124477564191, 27.589479071558227 ], [ -8.684399786809053, 27.395744126896005 ], [ -8.6872936670174, 25.881056219988906 ], [ -11.969418911171161, 25.933352769468268 ], [ -11.937224493853321, 23.374594224536168 ], [ -12.874221564169575, 23.284832261645178 ], [ -13.118754441774712, 22.771220201096256 ], [ -12.929101935263532, 21.327070624267563 ], [ -16.845193650773993, 21.333323472574879 ], [ -17.063423224342571, 20.999752102130827 ], [ -17.020428432675743, 21.422310288981478 ] ] ] }), d)' \
    | ndjson-map '
      // "add three South Kuril islands"
      ((d.properties.ADM0_A3 !== "RUS") ? null : (d.geometry.coordinates.push([[[146.2,44.52],[148.44,44.9],[149.15,45.64],[147.52,45.39],[146.2,44.52]].reverse()]), d.geometry.coordinates.push([[[149.63,45.85],[149.85,45.64],[151.12,46.31],[150.42,46.4],[149.63,45.85]].reverse()]),d.geometry.coordinates.push([[[155.74,50.76],[154.33,49.09],[156.66,50.54],[155.74,50.76]].reverse()]),d.geometry.coordinates.push([[[151.56,46.98],[151.87,46.7],[152.66,47.1],[152.4,47.33],[151.56,46.98]].reverse()])), d)' \
    > build/ne_$1_admin_0_countries.ndjson

    nd2topo $1
}


world() {
  world_shp $1
  mkdir -p world
  shp2json --encoding utf-8 -n build/ne_$1_admin_0_countries.shp \
  | ndjson-map 'i = d.properties.ISO_N3, d.id = i === "-99" ? undefined : i, d' \
  > build/ne_$1_admin_0_countries.ndjson

  nd2topo $1
}

nd2topo() {
  geo2topo -q 1e5 -n countries=<( geostitch -n < build/ne_$1_admin_0_countries.ndjson) \
    | topomerge land=countries \
    > world/$1.json
  shp2json --encoding utf-8 -n build/ne_$1_admin_0_countries.shp \
    | ndjson-map 'd.properties' \
    | ndjson-sort 'a.ISO_A3.localeCompare(b.ISO_A3)' \
    | json2tsv -n \
    > world/$1.tsv
}

worldfix 110m
world 50m
